"""Create coupon table

Revision ID: 4eaf63d7d355
Revises: 
Create Date: 2025-09-21 16:36:32.002073

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4eaf63d7d355'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('alert_tb', 'type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('EVENT_START', 'EVENT_END', 'TASK_SCHEDULE', 'TASK_START', 'TASK_END', 'ROUTINE_START', 'ROUTINE_END', name='alerttype', native_enum=False),
               existing_nullable=False)
    op.alter_column('alert_tb', 'minutes_before',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index(op.f('idx_alert_participant_id'), table_name='alert_tb')
    op.drop_index(op.f('idx_alert_routine_id'), table_name='alert_tb')
    op.create_index(op.f('ix_alert_tb_id'), 'alert_tb', ['id'], unique=False)
    op.drop_constraint(op.f('alert_tb_participant_id_fkey'), 'alert_tb', type_='foreignkey')
    op.drop_constraint(op.f('alert_tb_routine_id_fkey'), 'alert_tb', type_='foreignkey')
    op.create_foreign_key(None, 'alert_tb', 'routine_tb', ['routine_id'], ['id'])
    op.create_foreign_key(None, 'alert_tb', 'participant_tb', ['participant_id'], ['id'])
    op.drop_column('alert_tb', 'absolute_time')
    op.alter_column('category_tb', 'color',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('category_tb', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('category_tb', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_category_created_at'), table_name='category_tb')
    op.drop_index(op.f('idx_category_name'), table_name='category_tb')
    op.drop_index(op.f('idx_category_user_id'), table_name='category_tb')
    op.drop_index(op.f('idx_category_user_schedules'), table_name='category_tb')
    op.create_index(op.f('ix_category_tb_id'), 'category_tb', ['id'], unique=False)
    op.drop_constraint(op.f('fk_category_user'), 'category_tb', type_='foreignkey')
    op.create_foreign_key(None, 'category_tb', 'user_tb', ['user_id'], ['id'])
    op.alter_column('event_tb', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('event_tb', 'location',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('event_tb', 'visibility',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.create_index(op.f('ix_event_tb_id'), 'event_tb', ['id'], unique=False)
    op.create_index(op.f('ix_participant_tb_id'), 'participant_tb', ['id'], unique=False)
    op.drop_index(op.f('idx_routine_user_id'), table_name='routine_tb')
    op.create_index(op.f('ix_routine_tb_id'), 'routine_tb', ['id'], unique=False)
    op.drop_constraint(op.f('fk_routine_user'), 'routine_tb', type_='foreignkey')
    op.create_foreign_key(None, 'routine_tb', 'user_tb', ['user_id'], ['id'])
    op.alter_column('task_tb', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('task_tb', 'location',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('task_tb', 'visibility',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.create_index(op.f('ix_task_tb_id'), 'task_tb', ['id'], unique=False)
    op.drop_index(op.f('idx_user_device_token_user'), table_name='user_device_token_tb')
    op.drop_constraint(op.f('unique_user_device_token_token'), 'user_device_token_tb', type_='unique')
    op.create_index(op.f('ix_user_device_token_tb_id'), 'user_device_token_tb', ['id'], unique=False)
    op.drop_constraint(op.f('fk_user_device_token_user'), 'user_device_token_tb', type_='foreignkey')
    op.create_foreign_key(None, 'user_device_token_tb', 'user_tb', ['user_id'], ['id'])
    op.add_column('user_tb', sa.Column('nickname', sa.String(), nullable=True))
    op.alter_column('user_tb', 'created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               nullable=False)
    op.alter_column('user_tb', 'updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_tb', 'updated_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               nullable=True)
    op.alter_column('user_tb', 'created_at',
               existing_type=postgresql.TIMESTAMP(precision=6),
               nullable=True)
    op.drop_column('user_tb', 'nickname')
    op.drop_constraint(None, 'user_device_token_tb', type_='foreignkey')
    op.create_foreign_key(op.f('fk_user_device_token_user'), 'user_device_token_tb', 'user_tb', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_user_device_token_tb_id'), table_name='user_device_token_tb')
    op.create_unique_constraint(op.f('unique_user_device_token_token'), 'user_device_token_tb', ['token'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_user_device_token_user'), 'user_device_token_tb', ['user_id'], unique=False)
    op.drop_index(op.f('ix_task_tb_id'), table_name='task_tb')
    op.alter_column('task_tb', 'visibility',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('task_tb', 'location',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('task_tb', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'routine_tb', type_='foreignkey')
    op.create_foreign_key(op.f('fk_routine_user'), 'routine_tb', 'user_tb', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_routine_tb_id'), table_name='routine_tb')
    op.create_index(op.f('idx_routine_user_id'), 'routine_tb', ['user_id'], unique=False)
    op.drop_index(op.f('ix_participant_tb_id'), table_name='participant_tb')
    op.drop_index(op.f('ix_event_tb_id'), table_name='event_tb')
    op.alter_column('event_tb', 'visibility',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('event_tb', 'location',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('event_tb', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'category_tb', type_='foreignkey')
    op.create_foreign_key(op.f('fk_category_user'), 'category_tb', 'user_tb', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_category_tb_id'), table_name='category_tb')
    op.create_index(op.f('idx_category_user_schedules'), 'category_tb', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('idx_category_user_id'), 'category_tb', ['user_id'], unique=False)
    op.create_index(op.f('idx_category_name'), 'category_tb', ['name'], unique=False)
    op.create_index(op.f('idx_category_created_at'), 'category_tb', ['created_at'], unique=False)
    op.alter_column('category_tb', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('category_tb', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('category_tb', 'color',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.add_column('alert_tb', sa.Column('absolute_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'alert_tb', type_='foreignkey')
    op.drop_constraint(None, 'alert_tb', type_='foreignkey')
    op.create_foreign_key(op.f('alert_tb_routine_id_fkey'), 'alert_tb', 'routine_tb', ['routine_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('alert_tb_participant_id_fkey'), 'alert_tb', 'participant_tb', ['participant_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_alert_tb_id'), table_name='alert_tb')
    op.create_index(op.f('idx_alert_routine_id'), 'alert_tb', ['routine_id'], unique=False)
    op.create_index(op.f('idx_alert_participant_id'), 'alert_tb', ['participant_id'], unique=False)
    op.alter_column('alert_tb', 'minutes_before',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('alert_tb', 'type',
               existing_type=sa.Enum('EVENT_START', 'EVENT_END', 'TASK_SCHEDULE', 'TASK_START', 'TASK_END', 'ROUTINE_START', 'ROUTINE_END', name='alerttype', native_enum=False),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    # ### end Alembic commands ###
